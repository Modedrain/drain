function onLoad()
  params = {
    click_function = "generateDeck",
    function_owner = self,
    label          = "Test",
    position       = {0, 1, 0},
    width          = 800,
    height         = 400,
    font_size      = 340,
    color          = {0.5, 0.5, 0.5},
    font_color     = {1, 1, 1},
    tooltip        = "This text appears on mouseover.",
  }
  self.createButton(params)
end

function generateDeck()
  deck = {}
  webRequest.get("https://cubecobra.com/cube/download/csv/gigacube", function(response)
    local status_code = response.status_code
    if status_code == 200 then
      local data = response.data
    local cards = split(response.text, "\n")
    for i, card in ipairs(cards) do
      if i ~= 1 then
        local cardInfo = split(card, ",")
        local cardName = cardInfo[2]
        table.insert(deck, cardName)
      end
    end
  else
    error("Failed to fetch data from cubecobra, status code: " .. status_code)
    return
  end

  for i, cardName in ipairs(deck) do
    local scryfallResponse = WebRequest.get("https://api.scryfall.com/cards/named?fuzzy=" .. cardName)

    if scryfallResponse.status_code == 200 then
      local scryfallData = json.decode(scryfallResponse.text)
      local cardObject = createObject(scryfallData)
      cardObject.setPosition(Vector(i * 2, 0, 0))
    else
      print("Request to Scryfall API failed with status code: " .. scryfallResponse.status_code)
    end
  end
end)

function createObject(cardData)
  local object = GameObject.new()
  object.setName(cardData.name)
  object.setDescription(cardData.oracle_text)
  object.setColorTint(Color(1, 1, 1))
  object.setImage(cardData.image_uris.normal)

  return object
end

function split(input, sep)
  local sep, fields = sep or ",", {}
  local pattern = string.format("([^%s]+)", sep)
  input:gsub(pattern, function(c) fields[#fields+1] = c end)
  return fields
end
end
